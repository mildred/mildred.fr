---
---
:ruby

  def keywords
    if is_front_page?
      tag_set.join(', ')
    else
      tags = @item[:tags].nil? ? '' : @item[:tags].join(', ')
      keywords = @item[:keywords] || ''
      [keywords, tags].join(', ')
    end
  end

  def link_unless_current(s)
    if @item.identifier != "/#{s}/" then "<a href='"+link_path("/#{s}/")+"'>#{s}</a></li>" else s end
  end
  
  def logo
    if is_front_page?
      site_name
    else
      "<a href='/'>&laquo; #{site_name}</a>"
    end
  end

!!! Strict
%html
  %head
    %title= "#{@item[:title]}"
    %meta(content="text/html; charset=utf-8" http-equiv="Content-Type")/
    %meta(name="keywords" content="#{keywords}")/
    %meta(name="description" content="#{@item[:excerpt]}")/
    %meta(name="viewport" content="initial-scale=1.0, width=device-width")/
    %link(rel="canonical" href="#{absolute_url @item}")/
    %link(href="#{link_path("/atom.xml")}" title="ATOM Feed" rel="alternate" type="application/atom+xml")/
    %link(rel="icon" href="#{link_path("/favicon.png")}" type="image/png")/
    %link(rel="shortcut icon" href="#{link_path("/favicon.png")}" type="image/png")/
    %link(href="#{link_path("/style.css")}" media="screen" rel="stylesheet" type="text/css")/
    -if @item.identifier == '/'
      :plain
        <!-- Home Page Special Links -->
    %script(src="#{link_path("/Scripts/jquery.min.js")}" type="text/javascript")
    %script(src="#{link_path("/Scripts/comments.js")}" type="text/javascript")

  %body
    -# needed since some content render <pre> blocks
    - content = find_and_preserve(yield)
    .header
      .links
        %ul
          %li
            %a(href="#{link_item("/")}") Home
          %li
            %a(href="#{link_item("/Blog/")}") Blog
      
      .content
        %strong Tags:
        %ul.tags
          - tags.each do |tag|
            %li
              %a{:href => link_item("/tags/#{tag}/"), :class=>'tag'}= tag
      
      .clear
    
    .leftcol

    .main
      - if @item[:kind] == 'article'
        = render('_article', :item => @item, :content => content)
        = render('_other_articles_nav', :reference_item => @item)
        .clear
      - else
        = content
      .clear

    .clear

    .footer
      %hr/
